dev_update_off ()

read_image(ModelImage,'D:/00.WORK/20190114/005.tif')

RWidth := 300
RHeight := 160
dev_set_draw ('margin')

gen_rectangle1 (ROI_0, 25, 70, 28.9+RWidth, 70.844+RHeight)
* gen_rectangle1 (ROI_1, 135, 239.74, 130.82+RWidth, 239.74+RHeight)
* gen_rectangle1 (ROI_2, 244.5, 423.196, 244.5+RWidth, 423.196+RHeight)
* gen_rectangle1 (ROI_3, 370, 609.564, 366.02+RWidth, 609.564+RHeight)
* gen_rectangle1 (ROI_4, 491.46, 810.492, 491.46+RWidth, 810.492+RHeight)
* gen_rectangle1 (ROI_5, 625, 1017.24, 620.82+RWidth, 1017.24+RHeight)
* gen_rectangle1 (ROI_6, 770, 1230, 758.02+RWidth, 1232.73+RHeight)
dev_display (ROI_0)

stop()

reduce_domain (ModelImage, ROI_0, ImageReduced)
crop_domain (ImageReduced, ImagePart)

threshold (ImagePart, Region00, 0,20000)
*opening_circle (Region00, RegionOpening, 3.5) 
* erosion -> dilation

*closing_circle (Region00, RegionClosing, 10.5)
* dilation -> erosion

* rotate
rotate_image (ImagePart, ImagePart, 5, 'constant')


*gauss_filter (ImagePart, ImageGauss,11)
threshold (ImagePart, Region1, 0, 14000)
threshold (ImagePart, Region2, 0, 20000)
opening_circle (Region1, RegionOpening1, 10.5)
opening_circle (Region2, RegionOpening2, 10.5)

area_center (RegionOpening1, Area, Row, Column)


*gen_rectangle1 (RectangleLeft, 0, 0, 305, Column)
*gen_rectangle1 (RectangleRight, 0, Column+1, Row*2, Column*2)
gen_rectangle1 (RectangleUpper, Row, 0, Row*2, Column*2)
*intersection (RectangleLeft, RegionOpening1, RegionIntersectionLeft)
*intersection (RectangleRight, RegionOpening1, RegionIntersectionRight)
intersection (RectangleUpper, RegionOpening1, RegionIntersectionUpper)

*gray_projections (ImagePart, ImagePart, 'simple', HorProjection, VertProjection)

stop()

*--------------------------------*
reduce_domain (ImagePart, RegionIntersectionUpper, ImageReduced)
*crop_domain (ImageReduced, ImagePart)
*area_center (ImagePart, Area, Row, Column)
AreaLayer := 0

for Index := Row to Row+1 by 1
    gen_rectangle1 (RectangleOneLayer, Index, 0, Index+1, Column*2)
    intersection (RectangleOneLayer, RegionIntersectionUpper, RegionIntersectionOneLayer)
    
    reduce_domain (ImageReduced, RectangleOneLayer, ImageReduced1)
    crop_domain (ImageReduced1, ImageReduced)
    area_center (ImageReduced1, AreaOneLayer, RowOneLayer, ColumnOneLayer)
    
    if (RowOneLayer >= AreaLayer[end])
        AreaLayer := [AreaLayer, RowOneLayer]
    endif
endfor





*----------------지정영역을 원하는 형태로 변경----------------*
shape_trans (RegionIntersectionUpper, RegionTrans, 'inner_rectangle1')






*--------------------------------*




*--------------------------------*




*--------------------------------*






